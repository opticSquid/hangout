version: "3.8"
services:
  # traces
  tempo:
    image: grafana/tempo
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-local.yaml:/etc/tempo.yaml:ro
      - tempoData:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "9411:9411" # zipkin
      - "4318:4318"  # otlp http
      - "3200"   # grafana => tempo
      - "4317"  # otlp grpc
  # logs
  loki:
    image: grafana/loki
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"    # loki needs to be exposed so it receives logs
    volumes:
      - lokiData:/loki
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
  # metrics and alerts
  prometheus:
    image: prom/prometheus
    extra_hosts: ['host.docker.internal:host-gateway']
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheusData:/prometheus
    ports:
      - "9090:9090"
  # dashboard
  grafana:
    image: grafana/grafana
    extra_hosts: ['host.docker.internal:host-gateway']
    volumes:
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      - tempo
      - loki
      - prometheus
  geo-postgres:
    image: postgis/postgis
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=PkNLm@#2357
      - POSTGRES_DB=vendors
    volumes:
      - geopostgresData:/var/lib/postgresql/data
volumes:
  tempoData:
    driver: local
  lokiData:
    driver: local
  prometheusData:
    driver: local
  geopostgresData:
    driver: local
