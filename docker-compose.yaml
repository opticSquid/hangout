services:
  # database
  geo-postgres:
    image: postgis/postgis
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=PkNLm@#2357
    volumes:
      - geopostgresData:/var/lib/postgresql/data

  # event bus
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    volumes:
      - kafkaData:/bitnami/kafka
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,LISTENER_DOCKER_INTERNAL://:19091
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,LISTENER_DOCKER_INTERNAL://kafka:19091,
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,LISTENER_DOCKER_INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LISTENER_DOCKER_INTERNAL
      # Kafka Broker
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LOG_RETENTION_HOURS=1

  # kafka UI
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9001:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:19091
      - SERVER_SERVLET_CONTEXTPATH=/
    depends_on:
      - kafka

  # metrics and alerts
  prometheus:
    image: prom/prometheus
    # required for calling local servers from prometheus
    extra_hosts: ['host.docker.internal:host-gateway']
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --storage.tsdb.retention.time=1h
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:rw
      - prometheusData:/prometheus
    ports:
      - "9090:9090"

  # traces
  tempo:
    image: grafana/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-local.yaml:/etc/tempo.yaml:rw
      - tempoData:/tmp
    ports:
      - "14268"  # jaeger ingest
      - "4318:4318"  # otlp http
      - "3200"   # grafana => tempo
      - "4317:4317"  # otlp grpc
    depends_on:
      - prometheus

  # logs
  loki:
    image: grafana/loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100" # http log recieve port
      - "9095:9095" # grpc log recieve port
    volumes:
      - ./docker/loki/loki-local.yaml:/etc/loki/local-config.yaml:rw
      - lokiData:/loki
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    depends_on:
      - tempo
      
  # dashboard
  grafana:
    image: grafana/grafana
    # volumes:
      # - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - tempo
      - loki

volumes:
  geopostgresData:
    driver: local
  consulServerData:
    driver: local
  kafkaData:
    driver: local
  tempoData:
    driver: local
  lokiData:
    driver: local
  prometheusData:
    driver: local
